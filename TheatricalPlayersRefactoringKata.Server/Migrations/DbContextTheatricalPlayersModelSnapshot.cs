// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheatricalPlayersRefactoringKata.Server.Database;

#nullable disable

namespace TheatricalPlayersRefactoringKata.Server.Migrations
{
    [DbContext(typeof(DbContextTheatricalPlayers))]
    partial class DbContextTheatricalPlayersModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.InvoiceHistory.InvoiceHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DateOfInvoice")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("GETDATE()");

                    b.Property<decimal>("TotalAmountOwed")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalEarnedCredits")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceHistory", (string)null);
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.PerformanceHistory.PerformanceHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AmountOwed")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Audience")
                        .HasColumnType("int");

                    b.Property<decimal>("EarnedCredits")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("InvoiceHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("PlayId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceHistoryId");

                    b.ToTable("PerformanceHistory", (string)null);
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.Play.PlayEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Lines")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Plays", (string)null);
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.PerformanceHistory.PerformanceHistoryEntity", b =>
                {
                    b.HasOne("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.InvoiceHistory.InvoiceHistoryEntity", "InvoiceHistory")
                        .WithMany("PerformancesHistories")
                        .HasForeignKey("InvoiceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceHistory");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Server.Database.Repositories.Entities.InvoiceHistory.InvoiceHistoryEntity", b =>
                {
                    b.Navigation("PerformancesHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
