// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheatricalPlayersRefactoringKata.Infrastructure.Data;

#nullable disable

namespace TheatricalPlayersRefactoringKata.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.33");

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Customer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.Performance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Audience")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlayId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PlayId1");

                    b.ToTable("Performances");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.Play", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lines")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Plays");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.StatementLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Audience")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatementResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VolumeCredits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StatementResultId");

                    b.ToTable("StatementLines");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.StatementResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Customer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalVolumeCredits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("StatementResults");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.Performance", b =>
                {
                    b.HasOne("TheatricalPlayersRefactoringKata.Domain.Entities.Invoice", null)
                        .WithMany("Performances")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("TheatricalPlayersRefactoringKata.Domain.Entities.Play", "Play")
                        .WithMany()
                        .HasForeignKey("PlayId1");

                    b.Navigation("Play");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.StatementLine", b =>
                {
                    b.HasOne("TheatricalPlayersRefactoringKata.Domain.Entities.StatementResult", null)
                        .WithMany("Lines")
                        .HasForeignKey("StatementResultId");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("Performances");
                });

            modelBuilder.Entity("TheatricalPlayersRefactoringKata.Domain.Entities.StatementResult", b =>
                {
                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
